#!/bin/bash
set -e

mysql_cmd="mysql -u root -p${MYSQL_ROOT_PASSWORD}"

if [ -e "/var/lib/mysql/ib_logfile0" ]; then
   echo "Mariadb already setup before, skipping."
   exit 0
fi


if [ -z "$MYSQL_ROOT_PASSWORD" -a -z "$MYSQL_ALLOW_EMPTY_PASSWORD" ]; then
    echo >&2 'error: database is uninitialized and MYSQL_ROOT_PASSWORD not set'
    echo >&2 '  Did you forget to add -e MYSQL_ROOT_PASSWORD=... ?'
    exit 1
fi

echo 'Running mysql_install_db ...'
mysql_install_db
echo 'Finished mysql_install_db'

# These statements _must_ be on individual lines, and _must_ end with
# semicolons (no line breaks or comments are permitted).
# TODO proper SQL escaping on ALL the things D:

tempSqlFile='/tmp/mysql-first-time.sql'
cat > "$tempSqlFile" <<-EOSQL
        DELETE FROM mysql.user ;
        CREATE USER 'root'@'%' IDENTIFIED BY '${MYSQL_ROOT_PASSWORD}' ;
        GRANT ALL ON *.* TO 'root'@'%' WITH GRANT OPTION ;
        DROP DATABASE IF EXISTS test ;
EOSQL

if [ "$MYSQL_DATABASE" ]; then
    echo "CREATE DATABASE IF NOT EXISTS \`$MYSQL_DATABASE\` ;" >> "$tempSqlFile"
fi

if [ "$MYSQL_USER" -a "$MYSQL_PASSWORD" ]; then
    echo "CREATE USER '$MYSQL_USER'@'%' IDENTIFIED BY '$MYSQL_PASSWORD' ;" >> "$tempSqlFile"

    if [ "$MYSQL_DATABASE" ]; then
        echo "GRANT ALL ON \`$MYSQL_DATABASE\`.* TO '$MYSQL_USER'@'%' ;" >> "$tempSqlFile"
    fi
fi

echo 'FLUSH PRIVILEGES ;' >> "$tempSqlFile"

mysqld --skip-networking --init-file=$tempSqlFile &
pid="$!"

for i in {30..0}; do
    if echo 'SELECT 1' | $mysql_cmd &> /dev/null; then
        break
    fi
    echo 'MySQL init process in progress...'
    sleep 1
done
if [ "$i" = 0 ]; then
    echo >&2 'MySQL init process failed.'
    exit 1
fi

echo
for f in /docker-entrypoint-initdb.d/*; do
    case "$f" in
        *.sh)
          echo "$0: running $f"
          . "$f"
          [ "$?" != "0" ] && echo "$f failed. Exiting" && exit 1
        ;;
        *.sql)
          echo "$0: running $f";
          $mysql_cmd < "$f"
          [ "$?" != "0" ] && echo "$f failed. Exiting" && exit 1
          echo
        ;;
        *.sql.gz)
          echo "$0: running $f"
          gunzip -c "$f" | $mysql_cmd
          [ "$?" != "0" ] && echo "$f failed. Exiting" && exit 1
          echo
        ;;
        *)
          echo "$0: ignoring $f"
        ;;
    esac
done

if ! kill -s TERM "$pid" || ! wait "$pid"; then
    echo >&2 'Failed to stop initial MySQL setup process.'
    exit 1
fi
